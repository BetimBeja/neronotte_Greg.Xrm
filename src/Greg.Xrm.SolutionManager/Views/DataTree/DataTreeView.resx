<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="images.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="images.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAA
        BgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEHIAAywBOAMYAR70AAMsATgDqAH2A7YB/wMaASHsAAMsATgDrAH2A+AB/wPY
        Af8DtgH/AxoBIeQAAy8BOwOuAfYD4gH/A/0B/wP9Af8D2QH/A7YB/wMaASGcAAIMAQsBDwGnAWwBRgHG
        AdABhQFNAfAIAAHSAY4BUAHwAakBcAFIAcYCDAELAQ8gAAMvATsDsgH2A+QB/wP9Af8B+wHsAdUB/wH9
        AdIBlwH/Af0B+wH3Af8D2QH/A7cB/wMaASGUAAIOAQ0BEgGpAXEBSAHGAeUBowFkAf8BvgF8AUsB3ggA
        AcMBhgFOAd4B5wGoAWcB/wGpAXEBSAHGAg4BDQESGAADLwE7A7UB9gPlAf8D/QH/AfsB7AHWAf8B/QHN
        AYYC/wHPAYwB/wH6AdEBlwH/AfkB9wHzAf8D2QH/A7cB/wMaASGMAAFJAT0BNAFYAd0BnAFVAfcB6AGq
        AWkB/wHBAYMBTgHeARYBFQEUARsIAAEWARUBFAEbAcMBiQFPAd4B6AGqAWkB/wHbAZYBUgH3AUgBOgEz
        AVgQAAMvATsDuQH2A+cB/wP9Af8B+wHsAdYB/wH9Ac0BiAL/AdUBmAL/AdYBnAL/AdABjgH/AfcBzAGN
        Af8B/QH8AfsB/wPZAf8DtwH/AxkBH4QAAwQBBgHZAaABWAHxAewBuAF4Af8B4QGiAVgB+wEqASYBIwEz
        EAABKgEmASMBMwHhAaIBWAH7AekBsgF0Af8B1gGUAVMB8QMEAQYIAAMwATsDvAH2A+gB/wP9Af8B+wHs
        AdYB/wH9Ac0BiAL/AdUBmAL/AdcBngL/AdYBmwL/Ac4BiQH/Af0B4QG6Af8D/QH/A9cB/wO1Af8DEQEV
        iAABSgE/ATUBWAHhAacBWwH3AeoBtQFwAf8BxAGMAVIB3gEWARUBFAEbCAABFgEVARQBGwHFAZIBVAHe
        AeoBtQFwAf8B3wGiAVgB9wFJAT0BNAFYCAADMgE9A8AB9gPpAf8D/QH/AfsB6wHTAv8BzAGDAv8B1AGY
        Av8B1wGeAv8B1gGbAv8BzwGLAf8B/QHiAbwB/wP9Af8D2QH/A7kB/wMRARWQAAMOARIBrgGBAU8BxgHr
        AbYBcQH/AcQBjwFTAd4IAAHIAZgBVgHeAewBuwF1Af8BrgGBAU8BxgMOARIMAAPEAfYD6wH/A/0B/wP6
        Af8B+wHzAecB/wH+Ac4BiQL/AdQBlgL/AdUBmgL/Ac8BiwH/Af0B4gG8Af8D/QH/A9oB/wO9Af8DEQEV
        mAACDAELAQ8BrgGEAVABxgHXAaIBWQHwCAAB2wGpAV0B8AGvAYcBUQHGAgwBCwEPEAADzQH/A/0B/wP9
        Af8D/AH/A/cB/wH9AfUB6gH/Af4BzwGKAv8BzAGDAf8B/QHiAbwB/wP9Af8D3AH/A8AB/wMRARWgAAIM
        AQsBDygAA84B/wP9Af8D4AH/A8UB+QOyAeID9wH/AfsB8wHoAf8B/QHjAb0B/wP9Af8D3gH/A8MB/wMR
        ARXQAAPQAf8D/QH/A80B/wQAA6MBzQPzAf8D+wH/A/0B/wPgAf8DxwH/AxEBFdQAA9IB/wP9Af8D4gH/
        A84B/wPgAf8D/QH/A/0B/wPiAf8DywH/AxEBFdgAA9MB/wP9Af8D/QH/A/0B/wP9Af8D/QH/A+QB/wPN
        Af8DEQEV3AAD1QH/A9QB/wPSAf8D0QH/A9AB/wPOAf8DzQH/AxEBFaAAAUIBTQE+BwABPgMAASgDAAFA
        AwABEAMAAQEBAAEBBQABgBcAA/8BAAP/AT8EAAL/Af4BHwQAAv8B/AEPBAAC/wH4AQcEAAHxAY8B8AED
        BAAB4QGHAeABAQQAAcEBgwHABQABgwHBAYAFAAHBAYMBAAEBBAAB4QGHAQABAwQAAfEBjwEAAQcEAAH7
        Af8BAAEPBAAC/wEQAR8EAAL/AQABPwQAAv8BAAF/BAAC/wEAAf8EAAs=
</value>
  </data>
</root>